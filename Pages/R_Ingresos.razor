@page "/ingreso"
@page "/ingreso/{IngresoId:int}"
@inject IngresosBLL IngresosBLL
@inject NotificationService notificationService

<EditForm Model="Ingreso" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card">
        <div class="card-header">
            <h1>Registro</h1>
        </div>

        <div class="card-body">
            <div class="row">
                <div class="col-3">
                    <label>Id: </label>
                    <input type="number" class="form-control" @bind-value="Ingreso.IngresoId">
                </div>
                <div class="col-3 d-flex align-items-end">
                    <button type="button" class="btn btn-primary" @onclick="Buscar">
                        <span class="oi oi-magnifying-glass"></span>
                    </button>
                </div>
            </div>
            <div> 
                <label>Fecha: </label>
                    <InputDate @bind-Value="Ingreso.Fecha" class="form-control" />
                    <ValidationMessage For="@(() => Ingreso.Fecha)" />
            </div>
            <div> 
                <label>Concepto: </label>
                    <InputText @bind-Value="Ingreso.Concepto" class="form-control" />
                    <ValidationMessage For="@(() => Ingreso.Concepto)" />
            </div>
            <div> 
                <label>Monto: </label>
                    <InputNumber @bind-Value="Ingreso.Monto" class="form-control" />
                    <ValidationMessage For="@(() => Ingreso.Monto)" />
            </div>
            
        </div>

        <div class="model-footer">
            <button type="button" class="btn btn-primary" @onclick="Nuevo">
                <span class="oi oi-file"></span>Nuevo
            </button>
            <button type="submit" class="btn btn-success">
                <span class="oi oi-delete"></span>Guardar
            </button>
            <button type="button" class="btn btn-danger" @onclick="Eliminar">
                <span class="oi oi-document"></span>Eliminar
            </button>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int? IngresoId { get; set; }
    public Ingresos Ingreso { get; set; } = new Ingresos();
    public string mensaje { get; set; } = "";

    protected override void OnInitialized()
    {
        if (IngresoId.HasValue)
        {
            Ingreso.IngresoId = IngresoId.Value;
            Buscar();
        }
    }

    public void Buscar()
    {
        var IngresoEncontrado = IngresosBLL.Buscar(Ingreso.IngresoId);
        if (IngresoEncontrado != null)
        {
            Ingreso = IngresoEncontrado;
        }
    }

    public void Nuevo()
    {
        Ingreso = new Ingresos();
    }

    public void Guardar()
     {
        if (!Validar())
        {
            notificationService.ShowNotification(
                titulo: "Validaci√≥n",
                mensaje: "Error Revise los campos",
                NotificationSeverity.Error);
            return;
        }

        var guardo = IngresosBLL.Guardar(this.Ingreso);
        if (guardo)
        {
            notificationService.ShowNotification(
                titulo: "Exito",
                mensaje: "Guardado correctamente!",
                NotificationSeverity.Success);
            Nuevo();
        }
        else
        {
            notificationService.ShowNotification(
                titulo: "Error",
                mensaje: "Ocurrio un error y no fue posible guardar",
                NotificationSeverity.Error);
        }
    }

    public void Eliminar()
     {
        Buscar();
        if (IngresosBLL.Eliminar(this.Ingreso.IngresoId))
        {
            notificationService.ShowNotification(
                titulo: "Exito",
                mensaje: "Eliminado con Exito",
                NotificationSeverity.Success);
            Nuevo();
        }
        else
        {
            notificationService.ShowNotification(
                titulo: "Error",
                mensaje: "Ocurrio un error y no fue posible eliminar",
                NotificationSeverity.Error);
        }

    }

    bool Validar()
    {
        //todo: Validar que el nombre del sistema no este repetido.
        return true;
    }
}    